<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ValidationToModelViewNuGet</name>
    </assembly>
    <members>
        <member name="T:Validation.ExceptonExtension.BirthDateValidationException">
            <summary>
            A class used to validate dates that are greater than the current date.
            </summary>
        </member>
        <member name="M:Validation.ExceptonExtension.BirthDateValidationException.#ctor(System.String)">
            <summary>
            A new instance of the <see cref="T:Validation.ExceptonExtension.BirthDateValidationException"/> class
            </summary>
            <param name="message">The error message to be used</param>
        </member>
        <member name="M:Validation.ExceptonExtension.BirthDateValidationException.ValidationThrow(System.Nullable{System.DateTime})">
            <summary>
            A function that checks if the received date is smaller than the current date.
            Otherwise, it throws the <see cref="T:Validation.ExceptonExtension.BirthDateValidationException"/>
            </summary>
            <param name="birth_date">A DateTime that will be used for validation</param>
            <exception cref="T:Validation.ExceptonExtension.BirthDateValidationException">If the date is greater than the current date or is null</exception>
        </member>
        <member name="T:Validation.ExceptonExtension.CPFValidationException">
            <summary>
            A class used to validate CPF
            </summary>
        </member>
        <member name="M:Validation.ExceptonExtension.CPFValidationException.#ctor(System.String)">
            <summary>
              A new instance of the <see cref="T:Validation.ExceptonExtension.CPFValidationException"/> class
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Validation.ExceptonExtension.CPFValidationException.ValidationThrow(System.String)">
            <summary>
            A function that checks if the received CPF has 11 characters and performs the verification digit calculation.
            Otherwise, it throws the <see cref="T:Validation.ExceptonExtension.CPFValidationException"/>
            </summary>
            <param name="cpf">The user's CPF</param>
            <exception cref="T:Validation.ExceptonExtension.CPFValidationException">If the CPF is not equal to 11 characters or the verification digit is incorrect</exception>
        </member>
        <member name="T:Validation.ExceptonExtension.EmailAddresDomainException">
            <summary>
            A class used to validate emails containing an '@' and a 'domain', with or without a top-level domain (e.g., ".br")
            </summary>
        </member>
        <member name="M:Validation.ExceptonExtension.EmailAddresDomainException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Validation.ExceptonExtension.EmailAddresDomainException"/> class    
            </summary>
            <param name="message">The error message to be used</param>
        </member>
        <member name="M:Validation.ExceptonExtension.EmailAddresDomainException.ValidationThrow(System.String)">
            <summary>
            Validates if an email is valid.
            Otherwise, it throws the <see cref="T:Validation.ExceptonExtension.EmailAddresDomainException"/>
            </summary>
            <param name="email">The email to be validated</param>
            <exception cref="T:Validation.ExceptonExtension.EmailAddresDomainException">If the email is not valid</exception>
        </member>
        <member name="T:Validation.ViewModel.BirthDateLessThanToday">
            <summary>
            A class used to validate if the birth date is less than today's date.
            </summary>
        </member>
        <member name="M:Validation.ViewModel.BirthDateLessThanToday.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            Validates if the provided birth date is less than today's date.
            </summary>
        </member>
        <member name="T:Validation.ViewModel.EmailAddresDomain">
            <summary>
            A class used to validate if the email address is in a valid format.
            </summary>
        </member>
        <member name="M:Validation.ViewModel.EmailAddresDomain.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            Validates if the provided email is in a valid format.
            </summary>
        </member>
    </members>
</doc>
